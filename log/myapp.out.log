
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-08-12T09:34:07.115+09:00  INFO 76463 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Starting InquiryApplication v0.0.1-SNAPSHOT using Java 24.0.2 with PID 76463 (/Users/admin/InquiryList/build/libs/inquiry-0.0.1-SNAPSHOT.jar started by root in /Users/admin/InquiryList/build/libs)
2025-08-12T09:34:07.120+09:00  INFO 76463 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : No active profile set, falling back to 1 default profile: "default"
2025-08-12T09:34:08.738+09:00  INFO 76463 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12T09:34:08.886+09:00  INFO 76463 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 7 JPA repository interfaces.
2025-08-12T09:34:10.260+09:00  INFO 76463 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 443 (https)
2025-08-12T09:34:10.293+09:00  INFO 76463 --- [inquiry] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-12T09:34:10.293+09:00  INFO 76463 --- [inquiry] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-12T09:34:10.358+09:00  INFO 76463 --- [inquiry] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-12T09:34:10.359+09:00  INFO 76463 --- [inquiry] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3148 ms
2025-08-12T09:34:10.601+09:00  INFO 76463 --- [inquiry] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12T09:34:10.878+09:00  INFO 76463 --- [inquiry] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-12T09:34:10.950+09:00  INFO 76463 --- [inquiry] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-12T09:34:11.599+09:00  INFO 76463 --- [inquiry] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12T09:34:11.649+09:00  INFO 76463 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-12T09:34:11.933+09:00  INFO 76463 --- [inquiry] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2a5c6b76
2025-08-12T09:34:11.936+09:00  INFO 76463 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-12T09:34:12.054+09:00  WARN 76463 --- [inquiry] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12T09:34:12.075+09:00  INFO 76463 --- [inquiry] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.43
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12T09:34:14.886+09:00  INFO 76463 --- [inquiry] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12T09:34:15.052+09:00  INFO 76463 --- [inquiry] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12T09:34:15.734+09:00  INFO 76463 --- [inquiry] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12T09:34:20.188+09:00  WARN 76463 --- [inquiry] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12T09:34:20.248+09:00  INFO 76463 --- [inquiry] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-12T09:34:21.214+09:00  INFO 76463 --- [inquiry] [           main] o.a.t.util.net.NioEndpoint.certificate   : Connector [https-jsse-nio-443], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/var/root/.keystore] using alias [tomcat] with trust store [null]
2025-08-12T09:34:21.229+09:00  INFO 76463 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 443 (https) with context path '/'
2025-08-12T09:34:21.248+09:00  INFO 76463 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Started InquiryApplication in 14.967 seconds (process running for 16.013)
Hibernate: select c1_0.id from customer c1_0 where c1_0.code=? and c1_0.status=? limit ?
2025-08-12T09:34:21.393+09:00  INFO 76463 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : Customer with code DIDIM already exists, skipping initialization
Hibernate: select u1_0.id from user u1_0 where u1_0.customer_code=? and not(u1_0.delete_flag) limit ?
2025-08-12T09:34:21.398+09:00  INFO 76463 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : User with customerCode DIDIM and username admin already exists, skipping initialization
2025-08-12T09:34:39.262+09:00  INFO 76463 --- [inquiry] [-nio-443-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12T09:34:39.262+09:00  INFO 76463 --- [inquiry] [-nio-443-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-12T09:34:39.264+09:00  INFO 76463 --- [inquiry] [-nio-443-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
=== JWT 필터 진입 ===
요청 URL: /
인증 필요 경로 - JWT 검증 수행: /
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /signin
인증 필요 경로 - JWT 검증 수행: /signin
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== CustomUserDetailsService.loadUserByUsername 호출 ===
2. 입력된 usernameWithCustomerCode: admin|didim
파싱된 username: admin
파싱된 customerCode: didim
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 where c1_0.code=?
파싱된 username , customerCode로 DB조회
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=? and u1_0.customer_code=?
DB에서 조회된 사용자: admin
사용자 고객코드: DIDIM
사용자 삭제플래그: false
인증 성공 - CustomUserDetails 생성(User객체) 후 반환 -> JwtAuthController
=== CustomUserDetails.getPassword 호출 ===
반환할 비밀번호: ***
=== JWT 필터 진입 ===
요청 URL: /inquiryList
인증 필요 경로 - JWT 검증 수행: /inquiryList
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== 디버깅 정보 ===
요청 시간: Tue Aug 12 09:34:48 KST 2025
세션 ID: DEA12C53DFC90357A0D45B887727088D
요청 URL: https://didim.fmapp.kr/inquiryList
Authentication: UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
SecurityUtil username: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
2025-08-12T09:34:48.848+09:00  WARN 76463 --- [inquiry] [-nio-443-exec-3] org.hibernate.orm.query                  : HHH90003004: firstResult/maxResults specified with collection fetch; applying in memory
Hibernate: select i1_0.id,a1_0.inquiry_id,a1_0.id,a1_0.content,a1_0.replied_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username,i1_0.content,i1_0.created_at,i1_0.manager_id,i1_0.project_id,i1_0.status,i1_0.tick_number,i1_0.title,i1_0.writer_id from inquiry i1_0 join user w1_0 on w1_0.id=i1_0.writer_id left join answer a1_0 on i1_0.id=a1_0.inquiry_id left join user u1_0 on u1_0.id=a1_0.user_id where (? is null or lower(i1_0.title) like lower(concat('%',?,'%')) escape '') and (? is null or lower(w1_0.name) like lower(concat('%',?,'%')) escape '') and (? is null or i1_0.created_at>=?) and (? is null or i1_0.created_at<=?) and (? is null or i1_0.status in (?,?)) and (? is null or i1_0.project_id=?) order by i1_0.created_at desc
인쿼리콘텐츠 : [didim.inquiry.domain.Inquiry@6e9c27c, didim.inquiry.domain.Inquiry@7bbb9631, didim.inquiry.domain.Inquiry@36179b95, didim.inquiry.domain.Inquiry@e35885, didim.inquiry.domain.Inquiry@5397be93, didim.inquiry.domain.Inquiry@36f121ff, didim.inquiry.domain.Inquiry@380aa29, didim.inquiry.domain.Inquiry@23764b71]
인쿼리개수 : 8
인쿼리비었나 : false
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 left join customer c1_0 on c1_0.id=p1_0.customer_id where c1_0.id=? order by p1_0.created_at desc
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
=== JWT 필터 진입 ===
요청 URL: /inquiryList
인증 필요 경로 - JWT 검증 수행: /inquiryList
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
반환할 사용자명: admin
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== 디버깅 정보 ===
요청 시간: Tue Aug 12 09:34:49 KST 2025
세션 ID: DEA12C53DFC90357A0D45B887727088D
요청 URL: https://didim.fmapp.kr/inquiryList
Authentication: UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
SecurityUtil username: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
2025-08-12T09:34:49.257+09:00  WARN 76463 --- [inquiry] [-nio-443-exec-4] org.hibernate.orm.query                  : HHH90003004: firstResult/maxResults specified with collection fetch; applying in memory
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select i1_0.id,a1_0.inquiry_id,a1_0.id,a1_0.content,a1_0.replied_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username,i1_0.content,i1_0.created_at,i1_0.manager_id,i1_0.project_id,i1_0.status,i1_0.tick_number,i1_0.title,i1_0.writer_id from inquiry i1_0 join user w1_0 on w1_0.id=i1_0.writer_id left join answer a1_0 on i1_0.id=a1_0.inquiry_id left join user u1_0 on u1_0.id=a1_0.user_id where (? is null or lower(i1_0.title) like lower(concat('%',?,'%')) escape '') and (? is null or lower(w1_0.name) like lower(concat('%',?,'%')) escape '') and (? is null or i1_0.created_at>=?) and (? is null or i1_0.created_at<=?) and (? is null or i1_0.status in (?,?)) and (? is null or i1_0.project_id=?) order by i1_0.created_at desc
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
인쿼리콘텐츠 : [didim.inquiry.domain.Inquiry@5c924783, didim.inquiry.domain.Inquiry@222fb844, didim.inquiry.domain.Inquiry@6cb3f15a, didim.inquiry.domain.Inquiry@7c87a4ad, didim.inquiry.domain.Inquiry@649598b8, didim.inquiry.domain.Inquiry@23f4fa6d, didim.inquiry.domain.Inquiry@1b8a916a, didim.inquiry.domain.Inquiry@48c02359]
인쿼리개수 : 8
인쿼리비었나 : false
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
반환할 사용자명: admin
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 left join customer c1_0 on c1_0.id=p1_0.customer_id where c1_0.id=? order by p1_0.created_at desc
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== JWT 필터 진입 ===
요청 URL: /console
인증 필요 경로 - JWT 검증 수행: /console
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 order by c1_0.created_at desc limit ?
Hibernate: select count(c1_0.id) from customer c1_0
Hibernate: select count(*) from customer c1_0
Hibernate: select count(c1_0.id) from customer c1_0 where upper(c1_0.status)=upper(?)
Hibernate: select count(c1_0.id) from customer c1_0 where c1_0.created_at between ? and ?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== JWT 필터 진입 ===
요청 URL: /admin/customerList
인증 필요 경로 - JWT 검증 수행: /admin/customerList
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id<>? order by u1_0.id desc limit ?
Hibernate: select count(u1_0.id) from user u1_0 where u1_0.id<>?
Hibernate: select count(*) from user u1_0
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 where c1_0.code in (?,?,?,?,?,?,?,?,?) and c1_0.status=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== JWT 필터 진입 ===
요청 URL: /admin/projectListAdmin
인증 필요 경로 - JWT 검증 수행: /admin/projectListAdmin
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 order by p1_0.created_at desc,p1_0.created_at desc limit ?
Hibernate: select count(p1_0.id) from project p1_0
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 where c1_0.status=?
Hibernate: select count(p1_0.id) from project p1_0
Hibernate: select count(p1_0.id) from project p1_0 where p1_0.created_at>=?
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 where c1_0.id=?
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 where c1_0.code in (?,?,?) and c1_0.status=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== JWT 필터 진입 ===
요청 URL: /myInfo
인증 필요 경로 - JWT 검증 수행: /myInfo
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
요청전달
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== JWT 필터 진입 ===
요청 URL: /inquiryList
인증 필요 경로 - JWT 검증 수행: /inquiryList
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== 디버깅 정보 ===
요청 시간: Tue Aug 12 09:35:01 KST 2025
세션 ID: DEA12C53DFC90357A0D45B887727088D
요청 URL: https://didim.fmapp.kr/inquiryList
Authentication: UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
SecurityUtil username: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
2025-08-12T09:35:01.198+09:00  WARN 76463 --- [inquiry] [-nio-443-exec-5] org.hibernate.orm.query                  : HHH90003004: firstResult/maxResults specified with collection fetch; applying in memory
Hibernate: select i1_0.id,a1_0.inquiry_id,a1_0.id,a1_0.content,a1_0.replied_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username,i1_0.content,i1_0.created_at,i1_0.manager_id,i1_0.project_id,i1_0.status,i1_0.tick_number,i1_0.title,i1_0.writer_id from inquiry i1_0 join user w1_0 on w1_0.id=i1_0.writer_id left join answer a1_0 on i1_0.id=a1_0.inquiry_id left join user u1_0 on u1_0.id=a1_0.user_id where (? is null or lower(i1_0.title) like lower(concat('%',?,'%')) escape '') and (? is null or lower(w1_0.name) like lower(concat('%',?,'%')) escape '') and (? is null or i1_0.created_at>=?) and (? is null or i1_0.created_at<=?) and (? is null or i1_0.status in (?,?)) and (? is null or i1_0.project_id=?) order by i1_0.created_at desc
인쿼리콘텐츠 : [didim.inquiry.domain.Inquiry@493ce573, didim.inquiry.domain.Inquiry@1306d5e6, didim.inquiry.domain.Inquiry@57981c36, didim.inquiry.domain.Inquiry@1a7f8a0a, didim.inquiry.domain.Inquiry@5efad024, didim.inquiry.domain.Inquiry@320204cb, didim.inquiry.domain.Inquiry@671428d2, didim.inquiry.domain.Inquiry@14a6dd2]
인쿼리개수 : 8
인쿼리비었나 : false
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 left join customer c1_0 on c1_0.id=p1_0.customer_id where c1_0.id=? order by p1_0.created_at desc
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
=== JWT 필터 진입 ===
요청 URL: /inquiryList
인증 필요 경로 - JWT 검증 수행: /inquiryList
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== 디버깅 정보 ===
요청 시간: Tue Aug 12 09:35:01 KST 2025
세션 ID: DEA12C53DFC90357A0D45B887727088D
요청 URL: https://didim.fmapp.kr/inquiryList
Authentication: UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@48c32e93, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=null], Granted Authorities=[ADMIN]]
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
SecurityUtil username: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
2025-08-12T09:35:01.299+09:00  WARN 76463 --- [inquiry] [-nio-443-exec-8] org.hibernate.orm.query                  : HHH90003004: firstResult/maxResults specified with collection fetch; applying in memory
Hibernate: select i1_0.id,a1_0.inquiry_id,a1_0.id,a1_0.content,a1_0.replied_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username,i1_0.content,i1_0.created_at,i1_0.manager_id,i1_0.project_id,i1_0.status,i1_0.tick_number,i1_0.title,i1_0.writer_id from inquiry i1_0 join user w1_0 on w1_0.id=i1_0.writer_id left join answer a1_0 on i1_0.id=a1_0.inquiry_id left join user u1_0 on u1_0.id=a1_0.user_id where (? is null or lower(i1_0.title) like lower(concat('%',?,'%')) escape '') and (? is null or lower(w1_0.name) like lower(concat('%',?,'%')) escape '') and (? is null or i1_0.created_at>=?) and (? is null or i1_0.created_at<=?) and (? is null or i1_0.status in (?,?)) and (? is null or i1_0.project_id=?) order by i1_0.created_at desc
인쿼리콘텐츠 : [didim.inquiry.domain.Inquiry@8cbc63d, didim.inquiry.domain.Inquiry@c6ae024, didim.inquiry.domain.Inquiry@1d576c68, didim.inquiry.domain.Inquiry@398cb7c3, didim.inquiry.domain.Inquiry@24a054dd, didim.inquiry.domain.Inquiry@38bb0aa5, didim.inquiry.domain.Inquiry@263151eb, didim.inquiry.domain.Inquiry@f95cf]
인쿼리개수 : 8
인쿼리비었나 : false
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 left join customer c1_0 on c1_0.id=p1_0.customer_id where c1_0.id=? order by p1_0.created_at desc
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== JWT 필터 진입 ===
요청 URL: /
인증 필요 경로 - JWT 검증 수행: /
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /owa/auth/logon.aspx
인증 필요 경로 - JWT 검증 수행: /owa/auth/logon.aspx
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /RDWeb/Pages/
인증 필요 경로 - JWT 검증 수행: /RDWeb/Pages/
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /login
공개 경로 - JWT 검증 건너뛰기: /login
2025-08-12T10:04:43.453+09:00  INFO 76463 --- [inquiry] [ionShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12T10:04:43.460+09:00  INFO 76463 --- [inquiry] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-12T10:04:43.468+09:00  INFO 76463 --- [inquiry] [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12T10:04:43.477+09:00  INFO 76463 --- [inquiry] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-12T10:04:43.485+09:00  INFO 76463 --- [inquiry] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-08-12T10:04:45.411+09:00  INFO 76947 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Starting InquiryApplication v0.0.1-SNAPSHOT using Java 24.0.2 with PID 76947 (/Users/admin/InquiryList/build/libs/inquiry-0.0.1-SNAPSHOT.jar started by root in /Users/admin/InquiryList/build/libs)
2025-08-12T10:04:45.416+09:00  INFO 76947 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : No active profile set, falling back to 1 default profile: "default"
2025-08-12T10:04:46.788+09:00  INFO 76947 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12T10:04:46.895+09:00  INFO 76947 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 7 JPA repository interfaces.
2025-08-12T10:04:48.177+09:00  INFO 76947 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 443 (https)
2025-08-12T10:04:48.211+09:00  INFO 76947 --- [inquiry] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-12T10:04:48.212+09:00  INFO 76947 --- [inquiry] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-12T10:04:48.276+09:00  INFO 76947 --- [inquiry] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-12T10:04:48.277+09:00  INFO 76947 --- [inquiry] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2773 ms
2025-08-12T10:04:48.910+09:00  INFO 76947 --- [inquiry] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12T10:04:49.080+09:00  INFO 76947 --- [inquiry] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-12T10:04:49.190+09:00  INFO 76947 --- [inquiry] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-12T10:04:49.882+09:00  INFO 76947 --- [inquiry] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12T10:04:49.925+09:00  INFO 76947 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-12T10:04:50.254+09:00  INFO 76947 --- [inquiry] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6248cfab
2025-08-12T10:04:50.257+09:00  INFO 76947 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-12T10:04:50.411+09:00  WARN 76947 --- [inquiry] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12T10:04:50.431+09:00  INFO 76947 --- [inquiry] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.43
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12T10:04:51.885+09:00  INFO 76947 --- [inquiry] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12T10:04:52.032+09:00  INFO 76947 --- [inquiry] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12T10:04:52.535+09:00  INFO 76947 --- [inquiry] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12T10:04:56.076+09:00  WARN 76947 --- [inquiry] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12T10:04:56.120+09:00  INFO 76947 --- [inquiry] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-12T10:04:57.225+09:00  INFO 76947 --- [inquiry] [           main] o.a.t.util.net.NioEndpoint.certificate   : Connector [https-jsse-nio-443], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/var/root/.keystore] using alias [tomcat] with trust store [null]
2025-08-12T10:04:57.273+09:00  INFO 76947 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 443 (https) with context path '/'
2025-08-12T10:04:57.293+09:00  INFO 76947 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Started InquiryApplication in 12.724 seconds (process running for 13.544)
Hibernate: select c1_0.id from customer c1_0 where c1_0.code=? and c1_0.status=? limit ?
2025-08-12T10:04:57.427+09:00  INFO 76947 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : Customer with code DIDIM already exists, skipping initialization
Hibernate: select u1_0.id from user u1_0 where u1_0.customer_code=? and not(u1_0.delete_flag) limit ?
2025-08-12T10:04:57.432+09:00  INFO 76947 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : User with customerCode DIDIM and username admin already exists, skipping initialization
2025-08-12T10:08:33.434+09:00  INFO 76947 --- [inquiry] [ionShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12T10:08:33.452+09:00  INFO 76947 --- [inquiry] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-08-12T10:08:33.458+09:00  INFO 76947 --- [inquiry] [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12T10:08:33.461+09:00  INFO 76947 --- [inquiry] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-08-12T10:08:33.468+09:00  INFO 76947 --- [inquiry] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-08-12T10:08:35.235+09:00  INFO 77007 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Starting InquiryApplication v0.0.1-SNAPSHOT using Java 24.0.2 with PID 77007 (/Users/admin/InquiryList/build/libs/inquiry-0.0.1-SNAPSHOT.jar started by root in /Users/admin/InquiryList/build/libs)
2025-08-12T10:08:35.240+09:00  INFO 77007 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : No active profile set, falling back to 1 default profile: "default"
2025-08-12T10:08:36.516+09:00  INFO 77007 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12T10:08:36.646+09:00  INFO 77007 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 115 ms. Found 7 JPA repository interfaces.
2025-08-12T10:08:38.232+09:00  INFO 77007 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 443 (https)
2025-08-12T10:08:38.271+09:00  INFO 77007 --- [inquiry] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-12T10:08:38.272+09:00  INFO 77007 --- [inquiry] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-12T10:08:38.326+09:00  INFO 77007 --- [inquiry] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-12T10:08:38.327+09:00  INFO 77007 --- [inquiry] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2991 ms
2025-08-12T10:08:38.627+09:00  INFO 77007 --- [inquiry] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12T10:08:38.732+09:00  INFO 77007 --- [inquiry] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-12T10:08:38.826+09:00  INFO 77007 --- [inquiry] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-12T10:08:39.385+09:00  INFO 77007 --- [inquiry] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12T10:08:39.436+09:00  INFO 77007 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-12T10:08:39.783+09:00  INFO 77007 --- [inquiry] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d7f2f0a
2025-08-12T10:08:39.785+09:00  INFO 77007 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-12T10:08:39.844+09:00  WARN 77007 --- [inquiry] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12T10:08:39.872+09:00  INFO 77007 --- [inquiry] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.43
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12T10:08:41.620+09:00  INFO 77007 --- [inquiry] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12T10:08:41.757+09:00  INFO 77007 --- [inquiry] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12T10:08:42.258+09:00  INFO 77007 --- [inquiry] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12T10:08:45.704+09:00  WARN 77007 --- [inquiry] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12T10:08:45.750+09:00  INFO 77007 --- [inquiry] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-12T10:08:46.725+09:00  INFO 77007 --- [inquiry] [           main] o.a.t.util.net.NioEndpoint.certificate   : Connector [https-jsse-nio-443], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/var/root/.keystore] using alias [tomcat] with trust store [null]
2025-08-12T10:08:46.741+09:00  INFO 77007 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 443 (https) with context path '/'
2025-08-12T10:08:46.760+09:00  INFO 77007 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Started InquiryApplication in 12.328 seconds (process running for 13.07)
Hibernate: select c1_0.id from customer c1_0 where c1_0.code=? and c1_0.status=? limit ?
2025-08-12T10:08:46.886+09:00  INFO 77007 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : Customer with code DIDIM already exists, skipping initialization
Hibernate: select u1_0.id from user u1_0 where u1_0.customer_code=? and not(u1_0.delete_flag) limit ?
2025-08-12T10:08:46.891+09:00  INFO 77007 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : User with customerCode DIDIM and username admin already exists, skipping initialization
2025-08-12T10:35:11.427+09:00  INFO 77007 --- [inquiry] [-nio-443-exec-8] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12T10:35:11.428+09:00  INFO 77007 --- [inquiry] [-nio-443-exec-8] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-12T10:35:11.435+09:00  INFO 77007 --- [inquiry] [-nio-443-exec-8] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
=== JWT 필터 진입 ===
요청 URL: /inquiryList
인증 필요 경로 - JWT 검증 수행: /inquiryList
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /login
공개 경로 - JWT 검증 건너뛰기: /login
