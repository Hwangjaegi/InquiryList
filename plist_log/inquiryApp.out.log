
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-08-14T15:45:39.459+09:00  INFO 60717 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Starting InquiryApplication v0.0.1-SNAPSHOT using Java 24.0.2 with PID 60717 (/Users/admin/InquiryList/build/libs/inquiry-0.0.1-SNAPSHOT.jar started by root in /Users/admin/InquiryList/build/libs)
2025-08-14T15:45:39.466+09:00  INFO 60717 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : No active profile set, falling back to 1 default profile: "default"
2025-08-14T15:45:41.997+09:00  INFO 60717 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-14T15:45:42.140+09:00  INFO 60717 --- [inquiry] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 122 ms. Found 7 JPA repository interfaces.
2025-08-14T15:45:43.857+09:00  INFO 60717 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 443 (https)
2025-08-14T15:45:43.888+09:00  INFO 60717 --- [inquiry] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-14T15:45:43.890+09:00  INFO 60717 --- [inquiry] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-14T15:45:43.947+09:00  INFO 60717 --- [inquiry] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-14T15:45:43.948+09:00  INFO 60717 --- [inquiry] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4308 ms
2025-08-14T15:45:44.873+09:00  INFO 60717 --- [inquiry] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-14T15:45:45.020+09:00  INFO 60717 --- [inquiry] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-14T15:45:45.121+09:00  INFO 60717 --- [inquiry] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-14T15:45:45.867+09:00  INFO 60717 --- [inquiry] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-14T15:45:45.917+09:00  INFO 60717 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-14T15:45:46.332+09:00  INFO 60717 --- [inquiry] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@105dc04d
2025-08-14T15:45:46.335+09:00  INFO 60717 --- [inquiry] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-14T15:45:46.454+09:00  WARN 60717 --- [inquiry] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-14T15:45:46.477+09:00  INFO 60717 --- [inquiry] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.43
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-14T15:45:48.656+09:00  INFO 60717 --- [inquiry] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-14T15:45:48.838+09:00  INFO 60717 --- [inquiry] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-14T15:45:49.785+09:00  INFO 60717 --- [inquiry] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-14T15:45:54.673+09:00  WARN 60717 --- [inquiry] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-14T15:45:54.733+09:00  INFO 60717 --- [inquiry] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-14T15:45:55.833+09:00  INFO 60717 --- [inquiry] [           main] o.a.t.util.net.NioEndpoint.certificate   : Connector [https-jsse-nio-443], TLS virtual host [_default_], certificate type [UNDEFINED] configured from keystore [/var/root/.keystore] using alias [tomcat] with trust store [null]
2025-08-14T15:45:55.856+09:00  INFO 60717 --- [inquiry] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 443 (https) with context path '/'
2025-08-14T15:45:55.877+09:00  INFO 60717 --- [inquiry] [           main] didim.inquiry.InquiryApplication         : Started InquiryApplication in 17.321 seconds (process running for 18.707)
Hibernate: select c1_0.id from customer c1_0 where c1_0.code=? and c1_0.status=? limit ?
2025-08-14T15:45:56.050+09:00  INFO 60717 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : Customer with code DIDIM already exists, skipping initialization
Hibernate: select u1_0.id from user u1_0 where u1_0.customer_code=? limit ?
2025-08-14T15:45:56.054+09:00  INFO 60717 --- [inquiry] [           main] d.inquiry.config.DataInitializerConfig   : User with customerCode DIDIM and username admin already exists, skipping initialization
2025-08-14T15:50:41.535+09:00  INFO 60717 --- [inquiry] [nio-443-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-14T15:50:41.536+09:00  INFO 60717 --- [inquiry] [nio-443-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-14T15:50:41.540+09:00  INFO 60717 --- [inquiry] [nio-443-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
=== JWT 필터 진입 ===
요청 URL: /
인증 필요 경로 - JWT 검증 수행: /
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /console
인증 필요 경로 - JWT 검증 수행: /console
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== JWT 필터 진입 ===
요청 URL: /login
공개 경로 - JWT 검증 건너뛰기: /login
=== JWT 필터 진입 ===
요청 URL: /signin
인증 필요 경로 - JWT 검증 수행: /signin
/login 요청 시 토큰 정보 확인 불가능
헤더 쿠키 파라미터 -> Filter JWT : null
=== CustomUserDetailsService.loadUserByUsername 호출 ===
2. 입력된 usernameWithCustomerCode: admin|didim
파싱된 username: admin
파싱된 customerCode: didim
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0 where c1_0.code=?
파싱된 username , customerCode로 DB조회
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=? and u1_0.customer_code=?
DB에서 조회된 사용자: admin
사용자 고객코드: DIDIM
사용자 삭제플래그: false
인증 성공 - CustomUserDetails 생성(User객체) 후 반환 -> JwtAuthController
=== CustomUserDetails.getPassword 호출 ===
반환할 비밀번호: ***
=== JWT 필터 진입 ===
요청 URL: /inquiryList
인증 필요 경로 - JWT 검증 수행: /inquiryList
SecurityContextHolder.getContext().getAuthentication() : UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@2a647692, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=E013CC2BF6587B818FF3E5345850709C], Granted Authorities=[ADMIN]]
SecurityContextHolder.getContext().getAuthentication().isAuthenticated() : true
인증된 사용자 JWT 검증건너뛰기
=== 디버깅 정보 ===
요청 시간: Thu Aug 14 15:51:43 KST 2025
세션 ID: DA4947E6F3019F8958E90601AC8BD2B1
요청 URL: https://didim.fmapp.kr/inquiryList
Authentication: UsernamePasswordAuthenticationToken [Principal=didim.inquiry.auth.CustomUserDetails@2a647692, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=211.169.38.70, SessionId=E013CC2BF6587B818FF3E5345850709C], Granted Authorities=[ADMIN]]
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
SecurityUtil username: admin
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.username=?
2025-08-14T15:51:43.640+09:00  WARN 60717 --- [inquiry] [nio-443-exec-10] org.hibernate.orm.query                  : HHH90003004: firstResult/maxResults specified with collection fetch; applying in memory
Hibernate: select i1_0.id,a1_0.inquiry_id,a1_0.id,a1_0.content,a1_0.replied_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username,i1_0.content,i1_0.created_at,i1_0.manager_id,i1_0.project_id,i1_0.status,i1_0.tick_number,i1_0.title,i1_0.writer_id from inquiry i1_0 join user w1_0 on w1_0.id=i1_0.writer_id left join answer a1_0 on i1_0.id=a1_0.inquiry_id left join user u1_0 on u1_0.id=a1_0.user_id where (? is null or lower(i1_0.title) like lower(concat('%',?,'%')) escape '') and (? is null or lower(w1_0.name) like lower(concat('%',?,'%')) escape '') and (? is null or i1_0.created_at>=?) and (? is null or i1_0.created_at<=?) and (? is null or i1_0.status in (?,?)) and (? is null or i1_0.project_id=?) order by i1_0.created_at desc
인쿼리콘텐츠 : [didim.inquiry.domain.Inquiry@1cb29f97, didim.inquiry.domain.Inquiry@1a503fa2]
인쿼리개수 : 2
인쿼리비었나 : false
Hibernate: select c1_0.id,c1_0.code,c1_0.company,c1_0.created_at,c1_0.status,c1_0.updated_at from customer c1_0
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 left join customer c1_0 on c1_0.id=p1_0.customer_id where c1_0.id=? order by p1_0.created_at desc
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
Hibernate: select m1_0.id,m1_0.created_at,m1_0.delete_flag,m1_0.email,m1_0.name,m1_0.tel,m1_0.updated_at,u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from manager m1_0 left join user u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.customer_code,u1_0.delete_flag,u1_0.email,u1_0.name,u1_0.password,u1_0.role,u1_0.tel,u1_0.updated_at,u1_0.username from user u1_0 where u1_0.id=?
Hibernate: select p1_0.id,p1_0.created_at,p1_0.customer_id,p1_0.subject,p1_0.updated_at from project p1_0 where p1_0.id=?
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
=== CustomUserDetails.getUsername 호출 ===
반환할 사용자명: admin
